#!/bin/bash
#SBATCH --job-name GLs_call_plink  # Job name
#SBATCH -c 20                   # Use cpu
#SBATCH --mem-per-cpu 10G
#SBATCH -t 1-00:00:00             # Time limit hrs:min:sec
#SBATCH --mail-user georgette.femerling@sund.ku.dk
#SBATCH -o GLs_call_plink.out

module load htslib angsd plink/1.9.0 gcc/11.2.0 R/4.0.3

## GL of scaffolds of > 1MB with ANGSD - per sample
bamlist=$1
regions_file=$2
outname=$3
depth_file=$4
trans=$5

n1=$(wc -l $bamlist | cut -f1 -d" ")
n=$(awk -v n=$n1 'BEGIN{ printf "%.0f", n*0.75 }')

min=$(cut -f1 $depth_file)
max=$(cut -f2 $depth_file)

angsd -b $bamlist -GL 2 \
    -minQ 20 -minmapq 30 -rf $regions_file \
    -remove_bads 1 -uniqueOnly 1 -only_proper_pairs 1 \
    -minInd $n -noTrans $trans \
    -doPlink 2 -doGeno -4 -doPost 1 -doMaf 2 -doMajorMinor 1 -minmaf 0.05 -SNP_pval 1e-6 \
    -setMinDepth $min -setMaxDepth $max -doCounts 1 \
    -postCutoff 0.95 \
    -nThreads 20 -out ${outname}.1MB

awk '{if($1 < 5){$n=$1 + 1}else{$n= $1 + 2}; print "LaDigueM",$n,0,0,0,-9}' ${outname}.1MB.tfam > ${outname}.1MB.2.tfam
plink -tped ${outname}.1MB.tped -tfam ${outname}.1MB.2.tfam --recode -aec --out ${outname}.1MB

# 1. Get chr list from regions file
chr_list=$(tr -s '\n ' ' ,' < $regions_file)
# Do not run this line anymore, unless the original regions file is not > 1MB
# plink --file ${outname} --chr $chr_list --recode -aec --out ${outname}.1MB

# 2. Test for HWE with plink
plink --file ${outname}.1MB --hardy -aec --out ${outname}.1MB.hwe

# 3. From pvalue get qvalue
Rscript ~/storage/scripts/get_snps_hwe.r ${outname}.1MB.hwe.hwe # el output es hwe_chrs.txt

# 4. Keep snps that fail HWE test (based on qvalue)
plink --file ${outname}.1MB --extract hwe_chrs.txt --recode --out ${outname}.1MB.HWEq -aec

# 4.1 Get plink format ready for GONE --- only accepts numbers for names of chrs/scaffolds
#contigs="/groups/hologenomics/gfemer/data/Ref_genomes/Terpsiphone_cinnamomea/contigs_grt_1MB.noSexScafsubset200.txt"
plink --file ${outname}.1MB.HWEq --chr $chr_list --recode -aec --out ${outname}.1MB.HWEq.subset
awk 'BEGIN{chr="";n=0} {if($1!=chr){chr=$1;n+=1;} print n"\t"$2"\t"$3"\t"$4}' ${outname}.1MB.HWEq.subset.map > ${outname}.1MB.HWEq.subset.2.map

# 5. Pruning for LD 
plink --file ${outname}.1MB.HWEq --indep-pairwise 50 10 0.8 -aec --out ${outname}.1MB.HWEq.prune1
plink --file ${outname}.1MB.HWEq --extract ${outname}.1MB.HWEq.prune1.prune.in -aec --recode --out ${outname}.1MB.HWEq.prune1.prune

# GONE format, not need to use for GONE as it is pruned
sed 's/scaffold_//g' ${outname}.1MB.HWEq.prune1.prune.map > ${outname}.1MB.HWEq.prune1.prune.2.map

# Compute ROHs with a range of options
for wH in 5 #1 3 5
do 
winHet=$wH #  --homozyg-window-het homozygous in a window 
for wM in 5 #7 10 #1 3 5
do
winMiss=$wM # --homozyg-window-missing missed pos in a window
for wS in 10 #20 #30 50
do
winSNP=$wS # --homozyg-window-snp scanning window contains X SNPs
for RS in 20 50 100 #300 500
do
ROHsnp=$RS # --homozyg-snp runs of homozygosity containing at least X SNPs

ROHdensity=50 # --homozyg-density must have at least one SNP per 50 kb on average
ROHgap=1000 # --homozyg-gap if two consecutive SNPs are more than X bp apart, they cannot be in the same ROH
winThresh=0.05 # --homozyg-window-threshold For a window size of 100 SNPs and a threshold of 0.05, a SNP has to appear in at least five homozygous windows before it is identified as part of a segment.

plink -file ${outname}.1MB.HWEq.prune1.prune --homozyg-gap $ROHgap --homozyg-window-threshold $winThresh --homozyg-window-snp $winSNP --homozyg-window-missing $winMiss --homozyg-window-het $winHet --homozyg-snp $ROHsnp --homozyg-density $ROHdensity --out ${outname}.1MB.HWEq.prune1.prune.Het$winHet.miss$winMiss.win$winSNP.roh$ROHsnp.thresh$winThresh.den$ROHdensity.gap$ROHgap --aec

# plot distribution
Rscript ~/storage/scripts/plot_ROHs.r ${outname}.1MB.HWEq.prune1.prune.Het$winHet.miss$winMiss.win$winSNP.roh$ROHsnp.thresh$winThresh.den$ROHdensity.gap$ROHgap.hom ${outname}.1MB.Het$winHet.miss$winMiss.win$winSNP.roh$ROHsnp.thresh$winThresh.den$ROHdensity.gap$ROHgap

done
done
done
done

